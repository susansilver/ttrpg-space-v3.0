---
import { render } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";

// Fetch all entries from the "blog" collection and sort them by `pubDate` in descending order
const blogEntries = await getCollection("blog");
const recentEntry = blogEntries.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
)[0];

// Fetch campaign data for the recent entry
const campaignData = await getEntry(recentEntry.data.getRef);

// Render the content of the most recent entry
const { Content } = await render(recentEntry);
---

<html lang="en">
  <head>
    <BaseHead title="Home" description="A Dimension20 Fansite" />
  </head>

  <body class="bg-accent-300">
    <Header />
    <main>
      <article>
        <div class="grid grid-cols-12">
          <div
            class="lg:col-span-8 lg:col-start-3 lg:col-end-11 col-span-10 col-start-2 col-end-12"
          >
            <h1>{recentEntry.data.title}</h1>
            <div>
              by Suzza Silver ✪ <time
                datetime={new Date(recentEntry.data.pubDate).toISOString()}
              >
                Published on {
                  new Date(recentEntry.data.pubDate).toLocaleDateString(
                    undefined,
                    {
                      dateStyle: "medium",
                      timeZone: "UTC",
                    }
                  )
                }
              </time>
              <div
                class="border-l-2 border-blue-brand padding-left-xxl text-black-950 paragraph-width"
              >
                <Content />
                <div class="flex flex-row justify-between items-center">
                  {
                    recentEntry.data.prev &&
                      recentEntry.data.prev.length > 0 && (
                        <a
                          href={recentEntry.data.prev}
                          class="no-underline
  text-white-50
  hover:bg-primary-900
  visited:text-white-50
  p-3
  bg-blue-brand rounded-full"
                        >
                          <div class="max-w-fit text-white-50">
                            ❮ Prev Episode
                          </div>
                        </a>
                      )
                  }
                  {
                    recentEntry.data.next &&
                      recentEntry.data.next.length > 0 && (
                        <a
                          href={recentEntry.data.next}
                          class="no-underline
  text-white-50
  hover:bg-primary-900
  visited:text-white-50
  p-3
  bg-blue-brand rounded-full"
                        >
                          <div class="max-w-fit text-white-50">
                            Next Episode ❯
                          </div>
                        </a>
                      )
                  }
                </div>
              </div>
              <aside>
                <div
                  id="meta"
                  class="flex lg:flex-row flex-col gap-5 capitalize margin-top-xxl"
                >
                  {
                    campaignData?.data.title !== "none" && (
                      <p>
                        Campaign:
                        <a
                          href={`/campaigns/${recentEntry.data.campaign}`}
                          class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                        >
                          <span class="text-white-50">
                            {campaignData?.data.title}
                          </span>
                        </a>
                      </p>
                    )
                  }

                  {
                    campaignData?.data.dm !== "none" && (
                      <p>
                        GM:
                        <a
                          href={`/gm/${campaignData?.data.dm}`}
                          class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                        >
                          <span class="text-white-50">
                            {campaignData?.data.dm.replace(/-/g, " ")}
                          </span>
                        </a>
                      </p>
                    )
                  }

                  {
                    campaignData?.data.players &&
                      campaignData.data.players[0] !== "none" && (
                        <p>
                          Players:
                          <ul class="flex lg:flex-row flex-col flex-wrap gap-2 list-none lg:w-52">
                            {campaignData.data.players.map((player) => (
                              <li class="list-none">
                                <a
                                  href={`/players/${player}`}
                                  class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                                >
                                  <span class="text-white-50">
                                    {player.replace(/-/g, " ")}
                                  </span>
                                </a>
                              </li>
                            ))}
                          </ul>
                        </p>
                      )
                  }

                  {
                    campaignData?.data.type !== "none" && (
                      <p>
                        Type:
                        <a
                          href={`/type/${campaignData?.data.type}`}
                          class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                        >
                          <span class="text-white-50">
                            {campaignData?.data.type.replace(/-/g, " ")}
                          </span>
                        </a>
                      </p>
                    )
                  }

                  {
                    campaignData?.data.series &&
                      campaignData.data.series !== "none" && (
                        <p>
                          Series:
                          <span class="text-white-50 p-3 bg-blue-brand">
                            {campaignData.data.series}
                          </span>
                        </p>
                      )
                  }
                </div>
              </aside>
            </div>
          </div>
        </div>
      </article>

      <Footer />
    </main>
  </body>
</html>

<style is:global>
  .paragraph-width {
    max-width: 75ch;
  }
</style>
