---
import { getCollection, type CollectionEntry, render } from "astro:content";
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { getEntry } from "astro:content";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const blogEntries = await getCollection("blog");
  return blogEntries.map((entry) => ({
    params: { slug: entry.id },
    props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await render(entry);
interface Props {
  entry: CollectionEntry<"blog">;
}

const campaignData = await getEntry(entry.data.getRef);
---

<html lang="en">
  <head>
    <BaseHead title={entry.data.title} description={entry.data.description} />
  </head>

  <body class="bg-accent-300">
    <Header />
    <main>
      <article>
        <div class="grid grid-cols-12">
          <div
            class="lg:col-span-8 lg:col-start-3 lg:col-end-11 col-span-10 col-start-2 col-end-12"
          >
            <h1>{entry.data.title}</h1>
            <div>
              by Suzza Silver ✪ <time
                datetime={new Date(entry.data.pubDate).toISOString()}
              >
                Published on {
                  new Date(entry.data.pubDate).toLocaleDateString(undefined, {
                    dateStyle: "medium",
                    timeZone: "UTC",
                  })
                }
              </time>
            </div>
            <div
              class="border-l-2 border-blue-brand padding-left-xxl text-black-950 paragraph-width"
            >
              <Content />
              <div class="flex flex-row justify-between items-center">
                {
                  entry.data.prev && entry.data.prev.length > 0 && (
                    <a
                      href={entry.data.prev}
                      class="no-underline
text-white-50
hover:bg-primary-900
visited:text-white-50
p-3
bg-blue-brand rounded-full"
                    >
                      <div class="max-w-fit text-white-50">❮ Prev Episode</div>
                    </a>
                  )
                }
                {
                  entry.data.next && entry.data.next.length > 0 && (
                    <a
                      href={entry.data.next}
                      class="no-underline
text-white-50
hover:bg-primary-900
visited:text-white-50
p-3
bg-blue-brand rounded-full"
                    >
                      <div class="max-w-fit text-white-50">Next Episode ❯</div>
                    </a>
                  )
                }
              </div>
            </div>
            <aside>
              <div
                id="meta"
                class="flex lg:flex-row flex-col gap-5 capitalize margin-top-xxl"
              >
                {
                  campaignData?.data.title !== "none" && (
                    <p>
                      Campaign:
                      <a
                        href={`/campaigns/${entry.data.campaign}`}
                        class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                      >
                        <span class="text-white-50">
                          {campaignData?.data.title}
                        </span>
                      </a>
                    </p>
                  )
                }

                {
                  campaignData?.data.dm !== "none" && (
                    <p>
                      GM:
                      <a
                        href={`/gm/${campaignData?.data.dm}`}
                        class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                      >
                        <span class="text-white-50">
                          {campaignData?.data.dm.replace(/-/g, " ")}
                        </span>
                      </a>
                    </p>
                  )
                }

                {
                  campaignData?.data.players &&
                    campaignData.data.players[0] !== "none" && (
                      <p>
                        Players:
                        <ul class="flex lg:flex-row flex-col flex-wrap gap-2 list-none lg:w-52">
                          {campaignData.data.players.map((player) => (
                            <li class="list-none">
                              <a
                                href={`/players/${player}`}
                                class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                              >
                                <span class="text-white-50">
                                  {player.replace(/-/g, " ")}
                                </span>
                              </a>
                              {}
                            </li>
                          ))}
                        </ul>
                      </p>
                    )
                }

                {
                  campaignData?.data.type !== "none" && (
                    <p>
                      Type:
                      <a
                        href={`/type/${campaignData?.data.type}`}
                        class="text-white-50 hover:bg-primary-900 visited:text-white-50 p-3 bg-blue-brand"
                      >
                        <span class="text-white-50">{campaignData?.data.type.replace(/-/g, " ")}</span>
                      </a>
                    </p>
                  )
                }

                {
                  campaignData?.data.series &&
                    campaignData.data.series !== "none" && (
                      <p>
                        Series:
                        <span class="text-white-50 p-3 bg-blue-brand">
                          {campaignData.data.series}
                        </span>
                      </p>
                    )
                }
              </div>
            </aside>
          </div>
        </div>
      </article>
    </main>

    <Footer />
  </body>
</html>

<style>
  .paragraph-width {
    max-width: 75ch;
  }
</style>
